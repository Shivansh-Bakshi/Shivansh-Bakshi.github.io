{"version":3,"file":"component---src-pages-index-js-6cbb9a37c7c8e1d696f5.js","mappings":"uQAGaA,EAAYC,EAAAA,QAAAA,IAAAA,WAAU,4DAAVA,CAAU,6FAC7BC,EAAAA,GAgBOC,GAPQF,EAAAA,QAAAA,IAAAA,WAAU,wDAAVA,CAAU,oEAORA,EAAAA,QAAAA,IAAAA,WAAU,0DAAVA,CAAU,mHAUpBG,EAASH,EAAAA,QAAAA,IAAAA,WAAU,yDAAVA,CAAU,sFAMnBI,EAAOJ,EAAAA,QAAAA,IAAAA,WAAU,uDAAVA,CAAU,yDAMjBK,EAASL,EAAAA,QAAAA,IAAAA,WAAU,yDAAVA,CAAU,sFCxCnBD,EAAYC,EAAAA,QAAAA,IAAAA,WAAU,0DAAVA,CAAU,8NAgBtBM,GAAYN,EAAAA,EAAAA,SAAOD,GAAU,qEAAjBC,CAAiB,4BAI7BO,EAAQP,EAAAA,QAAAA,EAAAA,WAAQ,sDAARA,CAAQ,oDCX7B,EARa,SAAH,GAAsB,IAAhBQ,EAAQ,EAARA,SACZ,OACI,gBAAC,EAAS,KACLA,EAGb,ECCO,ICRMC,EAAMT,EAAAA,QAAAA,IAAAA,WAAU,2DAAVA,CAAU,sFAOhBU,EAAWV,EAAAA,QAAAA,IAAAA,WAAU,gEAAVA,CAAU,kCAKrBW,EAAiBX,EAAAA,QAAAA,IAAAA,WAAU,sEAAVA,CAAU,6HAO3BY,EAAUZ,EAAAA,QAAAA,IAAAA,WAAU,+DAAVA,CAAU,oBAIpBa,EAAUb,EAAAA,QAAAA,EAAAA,WAAQ,+DAARA,CAAQ,sBAIlBc,EAAWd,EAAAA,QAAAA,EAAAA,WAAQ,gEAARA,CAAQ,wBAInBe,EAAaf,EAAAA,QAAAA,EAAAA,WAAQ,kEAARA,CAAQ,qDAKrBgB,EAAchB,EAAAA,QAAAA,IAAAA,WAAU,mEAAVA,CAAU,mDAKxBiB,EAAiBjB,EAAAA,QAAAA,IAAAA,WAAU,sEAAVA,CAAU,qE,oBCxC3BkB,GAAUlB,EAAAA,EAAAA,SAAOS,GAAI,uEAAXT,CAAW,MAErBmB,GAAenB,EAAAA,EAAAA,SAAOa,GAAQ,4EAAfb,CAAe,MAE9BoB,GAAcpB,EAAAA,EAAAA,SAAOe,GAAW,2EAAlBf,CAAkB,MAEhCqB,GAAqBrB,EAAAA,EAAAA,SAAOgB,GAAY,kFAAnBhB,CAAmB,MCI/CsB,EAAiB,SAAH,GAAwB,IAAlBC,EAAU,EAAVA,WACtB,OACI,gBAACxB,EAAS,CAACyB,IAAKD,GACZ,gBAACrB,EAAO,KACJ,gBAACC,EAAM,iBACP,gBAACC,EAAI,KACD,gBAAC,IAAU,CACXqB,OAAQ,SAACC,GACLA,EACCC,WAAW,mBACXC,OACL,KAGJ,gBAACvB,EAAM,8CAIvB,EA6LawB,EAAO,WAChB,OACI,oDAER,EAEA,EAjMkB,WACd,MHTyB,SAACC,QAAM,IAANA,IAAAA,EAAS,GACnC,OAAkCC,EAAAA,EAAAA,WAAS,GAApCC,EAAS,KAAEC,EAAY,KACxBC,GAAiBC,EAAAA,EAAAA,QAAO,MAExBC,EAAW,WACf,GAAKF,EAAeG,QAApB,CAIA,IAAMC,EAASJ,EAAeG,QAAQE,wBAAwBD,OAC9DL,EAAaK,EAASR,GAAU,GAAKQ,EAASR,GAAUU,OAAOC,YAF/D,MAFER,GAAa,EAKjB,EAOA,OALAS,EAAAA,EAAAA,YAAU,WAER,OADAC,SAASC,iBAAiB,SAAUR,GAAU,GACvC,kBAAMO,SAASE,oBAAoB,SAAUT,GAAU,EAAM,CACtE,IAEO,CAACJ,EAAWE,EACrB,CGV4CY,GAAnCC,EAAc,KAAEC,EAAe,KAEtC,OACI,2BACI,gBAAC1B,EAAc,CAACC,WAAYyB,IAC5B,gBAAC,IAAM,CAACC,kBAAmBF,GACvB,gBAACzC,EAAS,2JAEgC,2BACtC,2BAAM,4LAEoE,2BAC1E,2BAAM,yCAEN,0BACI,oGACA,sGACA,8DAIR,gBAAC,EAAI,KACD,gBAACC,EAAK,mBAEN,gBAACE,EAAG,KACA,gBAACC,EAAQ,KACL,gBAACE,EAAO,KACJ,gBAACC,EAAO,sBACR,gBAACC,EAAQ,sBACT,gBAACC,EAAU,+BAEf,gBAACJ,EAAc,KACX,gBAAC,EAAAuC,EAAW,CACRC,IAAI,6BACJC,IAAI,UAAS,wBAIzB,gBAACpC,EAAW,mRAGsD,2BAC9D,2BAAM,uLAMd,gBAACP,EAAG,KACJ,gBAACC,EAAQ,KACD,gBAACE,EAAO,KACJ,gBAACC,EAAO,sBACR,gBAACC,EAAQ,yBACT,gBAACC,EAAU,8BAEf,gBAACJ,EAAc,KACX,gBAAC,EAAAuC,EAAW,CACRC,IAAI,gCACJC,IAAI,aAAY,wBAI5B,gBAACpC,EAAW,0PAMhB,gBAACP,EAAG,KACA,gBAACK,EAAQ,kBACT,gBAACC,EAAU,+BACX,gBAACC,EAAW,wKAGR,2BACA,gGAIR,gBAACP,EAAG,KACA,gBAACC,EAAQ,KACL,gBAACE,EAAO,KACJ,gBAACC,EAAO,0BACR,gBAACC,EAAQ,uBACT,gBAACC,EAAU,oCAEf,gBAACJ,EAAc,KACX,gBAAC,EAAAuC,EAAW,CACRC,IAAI,+BACJC,IAAI,UAAS,wBAIzB,gBAACpC,EAAW,oRAKR,gBAACC,EAAc,KACX,0BACIoC,MAAM,MACNC,OAAO,MACPH,IAAI,4CACJI,MAAM,oCACNC,YAAY,IACZC,MAAM,2FACNC,gBAAgB,kBAChBC,mBAAmB,qBACnBC,kBAAkB,oBAClBC,iBAAiB,mBACjBC,sBAAsB,8BAO1C,gBAAC,EAAI,KACD,gBAACvD,EAAK,iBACN,gBAACW,EAAO,KACJ,gBAACC,EAAY,mBACb,gBAACC,EAAW,qBACZ,gBAACC,EAAkB,gOAOvB,gBAACH,EAAO,KACJ,gBAACC,EAAY,oCACb,gBAACC,EAAW,aACZ,gBAACC,EAAkB,0JAE2B,2BAC1C,2BAAM,mBACU,gBAAC,KAAI,CAAC0C,GAAG,oDAAkD,cAC3E,gBAAC9C,EAAc,KACX,0BACIoC,MAAM,MACNC,OAAO,MACPH,IAAI,4CACJI,MAAM,+BACNC,YAAY,IACZC,MAAM,2FACNC,gBAAgB,kBAChBC,mBAAmB,qBACnBC,kBAAkB,oBAClBC,iBAAiB,mBACjBC,sBAAsB,6BAMtC,gBAAC5C,EAAO,KACJ,gBAACC,EAAY,6CACb,gBAACC,EAAW,aACZ,gBAACC,EAAkB,0LAIf,gBAACJ,EAAc,KACf,0BACQoC,MAAM,MACNC,OAAO,MACPH,IAAI,4CACJI,MAAM,sBACNC,YAAY,IACZC,MAAM,2FACNC,gBAAgB,kBAChBC,mBAAmB,qBACnBC,kBAAkB,oBAClBC,iBAAiB,mBACjBC,sBAAsB,+BAU1D,C","sources":["webpack://shivansh-bakshi-site/./src/sc/intro.js","webpack://shivansh-bakshi-site/./src/sc/card.js","webpack://shivansh-bakshi-site/./src/components/card.js","webpack://shivansh-bakshi-site/./src/utils/hooks.js","webpack://shivansh-bakshi-site/./src/sc/experiences.js","webpack://shivansh-bakshi-site/./src/sc/projects.js","webpack://shivansh-bakshi-site/./src/pages/index.js"],"sourcesContent":["import styled from \"styled-components\";\nimport fonts from \"../fonts/fonts\";\n\nexport const Container = styled.div`\n    ${fonts}\n\n    height: 93vh;\n    background-color: black;\n    color: white;\n    font-family: 'Lane';\n    position: relative;\n`\n\nexport const Waves = styled.div`\n    position: absolute;\n    top: 10%;\n    width: 100%;\n    background-color: inherit;\n`\n\nexport const Message = styled.div`\n    font-size: calc(32px + 5vw);\n    text-align: left;\n    position: absolute;\n    bottom: 10%;\n    width: 100%;\n\n    background-color: inherit;\n`\n\nexport const Header = styled.div`\n    margin-left: 2vh;\n    font-size: calc(23px + 1vw);\n    background-color: inherit;\n    color: white;\n`\nexport const Body = styled.div`\n    padding-left: 2vh;\n    color: black;\n    background-color: #eee;\n`\n\nexport const Footer = styled.div`\n    margin-left: 2vh;\n    font-size: calc(16px + 1vw);\n    background-color: inherit;\n    color: white;\n`","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n    width: 95%;\n    margin-top: 1vh;\n    margin-bottom: 1vh;\n    padding: 1vh;\n    background-color: #fff;\n    border-radius: 1vh;\n    text-align: left;\n    \n    font-size: calc(16px + 0.3vw);\n    list-style-position: inside;\n`\n\nexport const PlainCard = styled(Container)`\n    background-color: #eee;\n`\n\nexport const Title = styled.p`\n    font-size: calc(32px + 1vw);\n    padding-left: 0.5vh;\n`","import * as React from 'react';\nimport { Container } from '../sc/card';\n\nconst Card = ({ children }) => {\n    return(\n        <Container>\n            {children}\n        </Container>\n    )\n}\n\nexport default Card","import { useState, useEffect, useRef } from \"react\";\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height} = window;\n    return {\n        width,\n        height\n    };\n}\n\nexport const useWindowDimensions = () => {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return windowDimensions;\n}\n\nexport const useVisibility = (offset = 0) => {\n    const [isVisible, setIsVisible] = useState(true);\n    const currentElement = useRef(null);\n  \n    const onScroll = () => {\n      if (!currentElement.current) {\n        setIsVisible(false);\n        return;\n      }\n      const bottom = currentElement.current.getBoundingClientRect().bottom;\n      setIsVisible(bottom + offset >= 0 && bottom - offset <= window.innerHeight);\n    }\n  \n    useEffect(() => {\n      document.addEventListener('scroll', onScroll, true);\n      return () => document.removeEventListener('scroll', onScroll, true);\n    });\n  \n    return [isVisible, currentElement];\n  }","import styled from \"styled-components\";\n\nexport const Job = styled.div`\n    padding-top: 4.5vh;\n    font-size: calc(16px + 0.3vw);\n    padding-left: 1vh;\n    overflow:hidden;\n`\n\nexport const MetaDeta = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n`\n\nexport const ImageContainer = styled.div`\n    max-height: calc(3 * (16px + 0.3vw) + 1vh);\n    max-width: calc(3 * (16px + 0.3vw) + 1vh);  \n    margin-left: auto;\n    margin-right: 2.3vw;\n`\n\nexport const Details = styled.div`\n    display: block;\n`\n\nexport const Company = styled.p`\n    font-weight: 700;\n`\n\nexport const Position = styled.p`\n    font-style: italic;\n`\n\nexport const DateFromTo = styled.p`\n    font-size: calc(12px + 0.2vw);\n    font-style: italic;\n`\n\nexport const Description = styled.div`\n    padding-top: 1vh;\n    font-size: calc(16px + 0.2vw);\n`\n\nexport const VideoContainer = styled.div`\n    padding: 1vw;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n`","import styled from \"styled-components\";\nimport { Company, DateFromTo, Description, Job } from \"./experiences\";\n\nexport const Project = styled(Job)``\n\nexport const ProjectTitle = styled(Company)``\n\nexport const ProjectDate = styled(DateFromTo)``\n\nexport const ProjectDescription = styled(Description)``","import * as React from 'react';\nimport Layout from '../components/layout';\nimport Typewriter from \"typewriter-effect\";\nimport { Container, Body, Footer, Header, Message } from '../sc/intro';\nimport Card from '../components/card';\nimport { useVisibility } from '../utils/hooks';\nimport { Company, DateFromTo, Description, Details, ImageContainer, Job, MetaDeta, Position, VideoContainer} from '../sc/experiences';\nimport { PlainCard, Title } from '../sc/card';\nimport { Link } from 'gatsby';\n\nimport { StaticImage } from 'gatsby-plugin-image';\nimport { Project, ProjectDate, ProjectDescription, ProjectTitle } from '../sc/projects';\n\nconst IntroComponent = ({ visibleRef }) => {\n    return(\n        <Container ref={visibleRef}>\n            <Message>\n                <Header>Hi! I am</Header>\n                <Body>\n                    <Typewriter\n                    onInit={(typewriter) => {\n                        typewriter\n                        .typeString(\"Shivansh Bakshi\")\n                        .start()\n                    }}\n                    />\n                </Body>\n                <Footer>Undergrad | CS | Developer | Pianist</Footer>\n            </Message>\n        </Container>\n    )\n}\n\nconst IndexPage = () => {\n    const [isIntroVisible, introElementRef] = useVisibility();\n\n    return(\n        <div>\n            <IntroComponent visibleRef={introElementRef}/>\n            <Layout navbarFixedToTop={!isIntroVisible}>\n                <PlainCard>\n                    Hi There! My name is Shivansh Bakshi, and I'm currently an undergraduate student in my final year pursuing a\n                    Bachelor's degree in Computer Science.<br />\n                    <br />\n                    I have a keen interest in creating practical software solutions for future convenience. This website serves as\n                    my portfolio, demonstrating my experiences and learnings through projects.<br />\n                    <br />\n                    Future plans for this website include:\n                    <ul>\n                        <li>A Blog Section where I can pen down articles or activities of interest</li>\n                        <li>A Music Section to keep track of (and share :D) my progress on the Piano</li>\n                        <li>Anything else that comes along</li>\n                    </ul>\n                </PlainCard>\n\n                <Card>\n                    <Title>Experience</Title>\n\n                    <Job>\n                        <MetaDeta>\n                            <Details>\n                                <Company>Deutsche Bank</Company>\n                                <Position>Summer Intern</Position>\n                                <DateFromTo>May, 2022 - July 2022</DateFromTo>\n                            </Details>\n                            <ImageContainer>\n                                <StaticImage \n                                    src='../images/companies/db.png'\n                                    alt='DB Logo'\n                                />\n                            </ImageContainer>\n                        </MetaDeta>\n                        <Description>\n                            I designed and developed a performance testing framework for microservices that communicate over Google\n                            Cloud Pub/Sub. This allowed the developers to write performance tests for their microservices, which\n                            could further be integrated into the CI/CD pipeline for build.<br />\n                            <br />\n                            The framework provided the developer with complete freedom over the generation of unique test payload\n                            for the hundreds of thousands of messages to bombard the microservices with.\n                        </Description>\n                    </Job>\n\n                    <Job>\n                    <MetaDeta>\n                            <Details>\n                                <Company>Project MANAS</Company>\n                                <Position>AI Planning Head</Position>\n                                <DateFromTo>May, 2021 - May 2022</DateFromTo>\n                            </Details>\n                            <ImageContainer>\n                                <StaticImage \n                                    src='../images/companies/manas.png'\n                                    alt='Manas Logo'\n                                />\n                            </ImageContainer>\n                        </MetaDeta>\n                        <Description>\n                            Developed an android app using React Native to capture and geo-tag high resolution images with latitude,\n                            longitude, and compass orientation, for the Object Detection, Classification, and Localization pipeline\n                            for the AUVSI-SUAS competition.\n                        </Description>\n                    </Job>\n                    <Job>\n                        <Position>AI Member</Position>\n                        <DateFromTo>March, 2020 - May 2021</DateFromTo>\n                        <Description>\n                            Implemented real-time 2D object detection using CenterNet in TensorFlow-Python, wrapped in ROS to work \n                            with ZED Camera interface, mounted on a self-driving car.\n                            <br />\n                            <strong>Finalists 13 of Mahindra Rise Prize Driverless Car Challenge</strong>\n                        </Description>\n                    </Job>\n\n                    <Job>\n                        <MetaDeta>\n                            <Details>\n                                <Company>IIT Bombay - eYRC</Company>\n                                <Position>Lead Developer</Position>\n                                <DateFromTo>October, 2020 - April 2021</DateFromTo>\n                            </Details>\n                            <ImageContainer>\n                                <StaticImage \n                                    src='../images/companies/eyrc.png'\n                                    alt='DB Logo'\n                                />\n                            </ImageContainer>\n                        </MetaDeta>\n                        <Description>\n                            Developed an automated warehouse system using ROS, simulated in Gazebo, utilizing Image Processing to\n                            parse and filter package destinations and priorites, complete with an integrated dashboard over IoT to\n                            provide real-time updates on the status of orders and shipment.\n                            \n                            <VideoContainer>\n                                <iframe \n                                    width=\"560\" \n                                    height=\"315\" \n                                    src=\"https://www.youtube.com/embed/WaC0acVot2A\" \n                                    title=\"Automated Warehouse Demonstration\" \n                                    frameborder=\"0\" \n                                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \n                                    allowfullscreen=\"allowfullscreen\"\n                                    mozallowfullscreen=\"mozallowfullscreen\" \n                                    msallowfullscreen=\"msallowfullscreen\" \n                                    oallowfullscreen=\"oallowfullscreen\" \n                                    webkitallowfullscreen=\"webkitallowfullscreen\"\n                                ></iframe>\n                            </VideoContainer>\n                        </Description>\n                    </Job>\n                </Card>\n\n                <Card>\n                    <Title>Projects</Title>\n                    <Project>\n                        <ProjectTitle>My Website</ProjectTitle>\n                        <ProjectDate>October 2022</ProjectDate>\n                        <ProjectDescription>\n                            Started developing my personal website in React JS with Gatsby for fast, efficient static performance.\n                            The website currently acts as a portfolio website with features planned for the future as mentioned \n                            previously.\n                        </ProjectDescription>\n                    </Project>\n\n                    <Project>\n                        <ProjectTitle>Raw Audio to MIDI Convertor</ProjectTitle>\n                        <ProjectDate>2021</ProjectDate>\n                        <ProjectDescription>\n                            Developed a desktop app using QT/C++ that processes real-time audio signals and runs Yin-FFT on them to\n                            create MIDI files for monophonic melodies.<br/>\n                            <br />\n                            Git Repository: <Link to='https://github.com/Shivansh-Bakshi/NoteDetection'>Click Here</Link>\n                            <VideoContainer>\n                                <iframe \n                                    width=\"560\" \n                                    height=\"315\" \n                                    src=\"https://www.youtube.com/embed/1x7OmF7IUi8\" \n                                    title=\"Note Detection Demonstration\" \n                                    frameborder=\"0\" \n                                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \n                                    allowfullscreen=\"allowfullscreen\"\n                                    mozallowfullscreen=\"mozallowfullscreen\" \n                                    msallowfullscreen=\"msallowfullscreen\" \n                                    oallowfullscreen=\"oallowfullscreen\" \n                                    webkitallowfullscreen=\"webkitallowfullscreen\"\n                                ></iframe>\n                            </VideoContainer>\n                        </ProjectDescription>\n                    </Project>\n\n                    <Project>\n                        <ProjectTitle>Android Billing System for Factories</ProjectTitle>\n                        <ProjectDate>2021</ProjectDate>\n                        <ProjectDescription>\n                            Designed a React Native + Android studio app with custom file, permissions, and SQLite handlers to ease\n                            the billing process using templatized PDFs. Created for a friends company.\n\n                            <VideoContainer>\n                            <iframe \n                                    width=\"560\" \n                                    height=\"315\" \n                                    src=\"https://www.youtube.com/embed/CMZPWKDPfRE\" \n                                    title=\"Android Billing App\" \n                                    frameborder=\"0\" \n                                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \n                                    allowfullscreen=\"allowfullscreen\"\n                                    mozallowfullscreen=\"mozallowfullscreen\" \n                                    msallowfullscreen=\"msallowfullscreen\" \n                                    oallowfullscreen=\"oallowfullscreen\" \n                                    webkitallowfullscreen=\"webkitallowfullscreen\"\n                                ></iframe>\n                            </VideoContainer>\n                        </ProjectDescription>\n                    </Project>\n                </Card>\n            </Layout>\n        </div>\n\n    )\n}\n\nexport const Head = () => {\n    return(\n        <title>Shivansh Bakshi | CS</title>\n    )\n}\n\nexport default IndexPage"],"names":["Container","styled","fonts","Message","Header","Body","Footer","PlainCard","Title","children","Job","MetaDeta","ImageContainer","Details","Company","Position","DateFromTo","Description","VideoContainer","Project","ProjectTitle","ProjectDate","ProjectDescription","IntroComponent","visibleRef","ref","onInit","typewriter","typeString","start","Head","offset","useState","isVisible","setIsVisible","currentElement","useRef","onScroll","current","bottom","getBoundingClientRect","window","innerHeight","useEffect","document","addEventListener","removeEventListener","useVisibility","isIntroVisible","introElementRef","navbarFixedToTop","S","src","alt","width","height","title","frameborder","allow","allowfullscreen","mozallowfullscreen","msallowfullscreen","oallowfullscreen","webkitallowfullscreen","to"],"sourceRoot":""}